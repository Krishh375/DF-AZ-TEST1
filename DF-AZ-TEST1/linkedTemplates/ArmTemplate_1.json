{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-AZ-TEST1"
		},
		"Db21_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Db21'"
		},
		"AzureDataLakeStorageLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdemostorage21.dfs.core.windows.net/"
		},
		"SqlServer_onprem_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "@{linkedService().servername}"
		},
		"SqlServer_onprem_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().databasename}"
		},
		"SqlServer_onprem_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().username}"
		},
		"AzureBlobStorageendpoint_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/98163876-b4d3-4128-ad45-c4c6a103c74c/resourceGroups/az-learn/providers/Microsoft.Storage/storageAccounts/pracdemostorage"
		},
		"AzureBlobStorageendpoint_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorageendpoint_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"pracdemostorage.blob.core.windows.net"
			]
		},
		"AzureDataLakeStorage299_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/98163876-b4d3-4128-ad45-c4c6a103c74c/resourceGroups/az-learn/providers/Microsoft.Storage/storageAccounts/pracdemostorage"
		},
		"AzureDataLakeStorage299_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage299_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"pracdemostorage.dfs.core.windows.net"
			]
		},
		"AzureSqlDatabase194_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/98163876-b4d3-4128-ad45-c4c6a103c74c/resourceGroups/az-learn/providers/Microsoft.Sql/servers/azlearndb"
		},
		"AzureSqlDatabase194_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"AzureSqlDatabase194_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"azlearndb.database.windows.net"
			]
		},
		"AzureSqlDatabase310_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/98163876-b4d3-4128-ad45-c4c6a103c74c/resourceGroups/RG-TEST/providers/Microsoft.Sql/servers/krishh123"
		},
		"AzureSqlDatabase310_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"AzureSqlDatabase310_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"krishh123.database.windows.net"
			]
		},
		"CosmosDb_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/98163876-b4d3-4128-ad45-c4c6a103c74c/resourceGroups/RG-PROD/providers/Microsoft.DocumentDB/databaseAccounts/krishh-cosmos-db"
		},
		"CosmosDb_properties_groupId": {
			"type": "string",
			"defaultValue": "Sql"
		},
		"CosmosDb_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"krishh-cosmos-db.documents.azure.com"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/credential')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/98163876-b4d3-4128-ad45-c4c6a103c74c/resourceGroups/MI-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/MI-SCUS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDestinyGlobal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZDestinyGlobalDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FacExternalUserAssignment"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainerdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "productbuilderCosmos",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database_name": "customer_id"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "new_data"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xmldataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@string('http')",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinationimmu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationimmuls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "testimmutable",
						"container": "destincontainerimmutable"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pb_contractsection_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "productbuilderCosmos",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database_name": "pb_productBuilder_container"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"typeId": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"regions": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"region": {
										"type": "string"
									},
									"lastUpdatedBy": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string"
											},
											"userContextId": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"environments": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"users": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"ieContactId": {
										"type": "integer"
									},
									"emailNotifications": {
										"type": "array",
										"items": {
											"type": "integer"
										}
									}
								}
							}
						},
						"lastUpdatedBy": {
							"type": "object",
							"properties": {
								"email": {
									"type": "string"
								},
								"userContextId": {
									"type": "null"
								}
							}
						},
						"isDeleted": {
							"type": "boolean"
						}
					}
				},
				"typeProperties": {
					"collectionName": "contractSection"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pb_productBuilder_container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "productbuilderCosmos",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database_name": "pb_productBuilder_container"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "contractSection"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourceimmu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "immutablecopyls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HREmployeesSink.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLS_properties_typeProperties_url')]",
					"credential": {
						"referenceName": "credential",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/credential')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Db21')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Db2",
				"typeProperties": {
					"connectionString": "[parameters('Db21_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR-1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_onprem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"servername": {
						"type": "string",
						"defaultValue": "KRISHHPC\\SQLEXPRESS"
					},
					"databasename": {
						"type": "string",
						"defaultValue": "krishh"
					},
					"username": {
						"type": "string",
						"defaultValue": "sa"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer_onprem_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer_onprem_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer_onprem_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultsqlserver",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqlserverpassword"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vnetintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorageendpoint')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorageendpoint_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorageendpoint_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorageendpoint_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage299')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage299_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage299_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage299_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSqlDatabase194')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSqlDatabase194_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSqlDatabase194_properties_groupId')]",
				"fqdns": "[parameters('AzureSqlDatabase194_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSqlDatabase310')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSqlDatabase310_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSqlDatabase310_properties_groupId')]",
				"fqdns": "[parameters('AzureSqlDatabase310_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/CosmosDb')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('CosmosDb_properties_privateLinkResourceId')]",
				"groupId": "[parameters('CosmosDb_properties_groupId')]",
				"fqdns": "[parameters('CosmosDb_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}