{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-AZ-TEST1"
		},
		"AZDestinyGlobalDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AZDestinyGlobalDatabase'"
		},
		"AzureBlobPracdacdemo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobPracdacdemo'"
		},
		"AzureBlobStorage2_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"Oracle1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Oracle1'"
		},
		"Oracle2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle2'",
			"defaultValue": "host=@{linkedService().hostname};port=@{linkedService().portname};sid=@{linkedService().sid};user id=asdf;Password=@{linkedService().password}"
		},
		"RestService_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'RestService'"
		},
		"ServiceNow_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ServiceNow_LS'"
		},
		"Sftp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Sftp'"
		},
		"destinationimmuls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'destinationimmuls'"
		},
		"immutablecopyls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'immutablecopyls'"
		},
		"productbuilderCosmos_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'productbuilderCosmos'"
		},
		"AZDestinyGlobalDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "krishh123.database.windows.net"
		},
		"AZDestinyGlobalDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DestinyGlobal"
		},
		"AZDestinyGlobalDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "krishh"
		},
		"Azdemoappentra_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dempappentrakey.vault.azure.net/"
		},
		"AzureBlobStorage2_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://azdevsanewadls.blob.core.windows.net/"
		},
		"AzureBlobStorage2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "16b3c013-d300-468d-ac64-7eda0820b6d3"
		},
		"AzureBlobStorage2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "bb00111b-668b-4ba3-b619-21fa36679640"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azlearnsagen2.dfs.core.windows.net/"
		},
		"AzureKeyVaultsqlserver_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://sqlserver-cred-onprem.vault.azure.net/"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://httpstat.us/200?sleep=60000000"
		},
		"Oracle1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "@{linkedService().server}"
		},
		"Oracle1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "@{linkedService().username}"
		},
		"RestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().Baseurlendpoint}"
		},
		"RestService_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().clientid}"
		},
		"ServiceNow_LS_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://dev318723.service-now.com/nav_to.do?uri=oauth_entity.do?sys_id=2f0b92ea93332210bd0eb4897bba102e%26sysparm_view=default"
		},
		"ServiceNow_LS_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "thatikondakrishna77@gmail.com"
		},
		"Sftp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "az-postgres-demo.postgres.database.azure.com"
		},
		"Sftp_properties_typeProperties_hostKeyFingerprint": {
			"type": "string",
			"defaultValue": "flkfllessllfdfld"
		},
		"Sftp_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "pg"
		},
		"ls_kv_datafactory_bi_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-devqa-datafactory-bi.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/webactvity_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://dummy.restapiexample.com/api/v1/employees"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-01T15:59:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZDestinyGlobalDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AZDestinyGlobalDatabase_properties_typeProperties_server')]",
					"database": "[parameters('AZDestinyGlobalDatabase_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AZDestinyGlobalDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AZDestinyGlobalDatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azdemoappentra')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Azdemoappentra_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobPracdacdemo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobPracdacdemo_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage2_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('AzureBlobStorage2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureBlobStorage2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('AzureBlobStorage2_servicePrincipalCredential')]"
					},
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultsqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultsqlserver_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"server": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Oracle",
				"version": "2.0",
				"typeProperties": {
					"server": "[parameters('Oracle1_properties_typeProperties_server')]",
					"authenticationType": "Basic",
					"username": "[parameters('Oracle1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Oracle1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"hostname": {
						"type": "string",
						"defaultValue": "godmf"
					},
					"portname": {
						"type": "string",
						"defaultValue": "ldlflf"
					},
					"sid": {
						"type": "string",
						"defaultValue": "lsldl"
					},
					"password": {
						"type": "string",
						"defaultValue": "lsdll"
					}
				},
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Baseurlendpoint": {
						"type": "string"
					},
					"tokenurlendpoint": {
						"type": "string"
					},
					"clientid": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('RestService_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('RestService_clientSecret')]"
					},
					"tokenEndpoint": "@{linkedService().tokenurlendpoint}"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServiceNow_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "ServiceNowV2",
				"typeProperties": {
					"endpoint": "[parameters('ServiceNow_LS_properties_typeProperties_endpoint')]",
					"authenticationType": "Basic",
					"username": "[parameters('ServiceNow_LS_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ServiceNow_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp_properties_typeProperties_host')]",
					"port": "1532",
					"skipHostKeyValidation": false,
					"hostKeyFingerprint": "[parameters('Sftp_properties_typeProperties_hostKeyFingerprint')]",
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinationimmuls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('destinationimmuls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/immutablecopyls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('immutablecopyls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_kv_datafactory_bi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_kv_datafactory_bi_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/productbuilderCosmos')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Database_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('productbuilderCosmos_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}